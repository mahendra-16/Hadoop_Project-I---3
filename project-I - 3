REGISTER '/home/hadoop/Atos/elephant-bird-hadoop-compat-4.1.jar';
 
REGISTER '/home/hadoop/Atos/elephant-bird-pig-4.1.jar';
 
REGISTER '/home/hadoop/Atos/json-simple-1.1.1.jar';

load_tweet = LOAD '/pigscript/tweets.txt' using com.twitter.elephantbird.pig.load.JsonLoader('-nestedLoad') AS myMap;

extract_details = FOREACH load_tweet GENERATE myMap#'id' as id, myMap#'text' as text;

tokens = foreach extract_details generate id,text, FLATTEN(TOKENIZE(text)) As word;

dictionary = load '/AFINN.txt' using PigStorage('\t') AS(word:chararray,rating:int);

word_rating = join tokens by word left outer, dictionary by word using 'replicated';

describe word_rating;

 	
rating = foreach word_rating generate tokens::id as id,tokens::text as text, dictionary::rating as rate;

word_group = group rating by (id,text);

avg_rate = foreach word_group generate group, AVG(rating.rate) as tweet_rating;

positive_tweets = filter avg_rate by tweet_rating>=0;
